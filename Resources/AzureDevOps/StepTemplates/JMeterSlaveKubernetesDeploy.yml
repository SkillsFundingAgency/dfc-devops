parameters:
  AksResourceGroup: ''
  AzureSubscriptionEndpoint: ''
  KubernetesCluster: ''
  ManifestFileName: ''
  PathToManifest: ''

steps:
- task: CopyFiles@2
  displayName: 'Copy ${{ parameters.ManifestFileName }}'
  inputs:
    SourceFolder: ${{ parameters.PathToManifest }}
    Contents: ${{ parameters.ManifestFileName }}
    TargetFolder: ${{ parameters.PathToManifest }}/temp
    overWrite: true
- pwsh: Write-Output "##vso[task.setvariable variable=JMeterSlaves]jmeter-slaves-1"
  displayName: Set JMeterSlaves variable
- pwsh: Write-Output "##vso[task.setvariable variable=JMeterSlaveDeploymentNodeSelector]$(JMeterSlaveDeploymentNodeSelector1)"
  displayName: Set JMeterSlaveDeploymentNodeSelector variable
- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform file ${{ parameters.ManifestFileName }}'
  inputs:
    SourcePath: ${{ parameters.PathToManifest }}/temp
    TargetFileNames: ${{ parameters.ManifestFileName }}
# deploy manifest
- task: Kubernetes@1
  displayName: kubectl deploy manifest
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
    azureResourceGroup: ${{ parameters.AksResourceGroup }}
    kubernetesCluster: ${{ parameters.KubernetesCluster }}
    useClusterAdmin: true
    namespace: 'default'
    command: 'apply'
    arguments: '--filename=${{ parameters.PathToManifest }}/temp/${{ parameters.ManifestFileName }}'

- task: CopyFiles@2
  displayName: 'Copy ${{ parameters.ManifestFileName }}'
  inputs:
    SourceFolder: ${{ parameters.PathToManifest }}
    Contents: ${{ parameters.ManifestFileName }}
    TargetFolder: ${{ parameters.PathToManifest }}/temp
    overWrite: true
- pwsh: Write-Output "##vso[task.setvariable variable=JMeterSlaves]jmeter-slaves-2"
  displayName: Set JMeterSlaves variable
- pwsh: Write-Output "##vso[task.setvariable variable=JMeterSlaveDeploymentNodeSelector]$(JMeterSlaveDeploymentNodeSelector2)"
  displayName: Set JMeterSlaveDeploymentNodeSelector variable
- task: esfadevops.Tokenization.custom-build-task.Tokenization@0
  displayName: 'Tokenization: Transform file ${{ parameters.ManifestFileName }}'
  inputs:
    SourcePath: ${{ parameters.PathToManifest }}/temp
    TargetFileNames: ${{ parameters.ManifestFileName }}
# deploy manifest
- task: Kubernetes@1
  displayName: kubectl deploy manifest
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: ${{ parameters.AzureSubscriptionEndpoint }}
    azureResourceGroup: ${{ parameters.AksResourceGroup }}
    kubernetesCluster: ${{ parameters.KubernetesCluster }}
    useClusterAdmin: true
    namespace: 'default'
    command: 'apply'
    arguments: '--filename=${{ parameters.PathToManifest }}/temp/${{ parameters.ManifestFileName }}'

- task: DeleteFiles@1
  displayName: 'Delete tokenised ${{ parameters.ManifestFileName }} file'
  inputs:
    SourceFolder: ${{ parameters.PathToManifest }}/temp
    Contents: ${{ parameters.ManifestFileName }}
  condition: always()