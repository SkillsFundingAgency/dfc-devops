{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "databaseName": {
            "type": "string"
        },
        "sqlServerName": {
            "type": "string"
        },
        "elasticPoolName": {
            "type": "string",
            "defaultValue": ""
        },
        "databaseSize": {
            "type": "string",
            "defaultValue": "1",
            "allowedValues": [
                "1",
                "2",
                "3",
                "4",
                "6",
                "7",
                "9",
                "10",
                "11",
                "15"
            ]
        },
        "databaseSizeBytes": {
            "type": "string",
            "defaultValue": ""
        },
        "databaseTier": {
            "type": "string",
            "defaultValue": "ElasticPool",
            "allowedValues": [
                "ElasticPool",
                "Basic",
                "Standard",
                "Premium"
            ]
        },
        "dataMaskingExemptPrincipals": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Semi-colon separated list of database principals who are exempt from the following data masking rules"
            }
        },
        "dataMaskingRules": {
            "type": "array",
            "defaultValue": [],
            "metadata": {
                "description": "Object array where object is of type DataMaskingRuleProperties: https://docs.microsoft.com/en-us/azure/templates/microsoft.sql/servers/databases/datamaskingpolicies/rules#DataMaskingRuleProperties"
            }
        },
        "diagnosticsRetentionDays": {
            "type": "int",
            "defaultValue": 0,
            "minValue": 0,
            "maxValue": 365,
            "metadata": {
                "descrtiption": "The number of days that diagnostic logs will be stored for. Default value is forever, max is 1 year."
            }
        },
        "logAnalyticsSubscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The id of the subscription for the Log Analytics Workspace. This defaults to the current subscription."
            }
        },
        "logAnalyticsResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The resource group of the Log Analytics Workspace."
            }
        },
        "logAnalyticsWorkspaceName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The name of the Log Analytics Workspace."
            }
        }
    },
    "variables": {
        "deployToElasticPool": "[greater(length(parameters('elasticPoolName')), 0)]",
        "databaseSettings": {
            "nonElasticPool": {
                "sku": {
                    "name": "[variables('databaseSkuName')]",
                    "tier": "[parameters('databaseTier')]",
                    "size": "[parameters('databaseSize')]"
                },
                "properties": {
                    "maxSizeBytes": "[parameters('databaseSizeBytes')]"
                }
            },
            "elasticPool": {
                "sku": {
                    "name": "ElasticPool"
                },
                "properties": {
                    "elasticPoolId": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Sql/servers/', parameters('sqlServerName'), '/elasticPools/', parameters('elasticPoolName'))]"
                }
            }
        },
        "databaseSkuName": "[if(equals(parameters('databaseTier'), 'Basic'), parameters('databaseTier'), concat(substring(parameters('databaseTier'), 0, 1), parameters('databaseSize')))]",
        "diagnosticsSettings": [
            "QueryStoreRuntimeStatistics",
            "QueryStoreWaitStatistics",
            "Errors",
            "DatabaseWaitStatistics",
            "Timeouts",
            "Blocks",
            "SQLInsights",
            "AutomaticTuning",
            "Deadlocks"
        ]
    },
    "resources": [
        {
            "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'))]",
            "type": "Microsoft.Sql/servers/databases",
            "apiVersion": "2017-10-01-preview",
            "location": "[resourceGroup().location]",
            "sku": "[if(variables('deployToElasticPool'), variables('databaseSettings').elasticPool.sku, variables('databaseSettings').nonElasticPool.sku)]",
            "properties": "[if(variables('deployToElasticPool'), variables('databaseSettings').elasticPool.properties, variables('databaseSettings').nonElasticPool.properties)]",
            "resources": [
                {
                    "name": "current",
                    "type": "transparentDataEncryption",
                    "apiVersion": "2014-04-01",
                    "properties": {
                        "status": "Enabled"
                    },
                    "dependsOn": [
                        "[parameters('databaseName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Sql/servers/databases/providers/diagnosticSettings",
            "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'), '/Microsoft.Insights/service')]",
            "condition": "[not(equals(parameters('logAnalyticsResourceGroup'), ''))]",
            "apiVersion": "2017-05-01-preview",
            "properties": {
                "workspaceId": "[resourceId(parameters('logAnalyticsSubscriptionId'), parameters('logAnalyticsResourceGroup'), 'Microsoft.OperationalInsights/Workspaces',parameters('logAnalyticsWorkspaceName'))]",
                "copy": [
                    {
                        "name": "logs",
                        "count": "[length(variables('diagnosticsSettings'))]",
                        "input": {
                            "category": "[variables('diagnosticsSettings')[copyIndex('logs')]]",
                            "enabled": true,
                            "retentionPolicy": {
                                "days": "[parameters('diagnosticsRetentionDays')]",
                                "enabled": true
                            }
                        }
                    }
                ],
                "metrics": [
                    {
                        "timeGrain": "AllMetrics",
                        "enabled": true,
                        "retentionPolicy": {
                            "enabled": true,
                            "days": "[parameters('diagnosticsRetentionDays')]"
                        }
                    }
                ]
            },
            "dependsOn": [
                "[parameters('databaseName')]"
            ]
        },
        {
            "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'), '/Default')]",
            "condition": "[greater(length(parameters('dataMaskingRules')), 0)]",
            "type": "Microsoft.Sql/servers/databases/dataMaskingPolicies",
            "apiVersion": "2014-04-01",
            "properties": {
                "dataMaskingState": "Enabled",
                "exemptPrincipals": "[parameters('dataMaskingExemptPrincipals')]"
            }
        },
        {
            "name": "[concat(parameters('sqlServerName'), '/', parameters('databaseName'), '/Default/', if(greater(length(parameters('dataMaskingRules')), 0), concat(parameters('dataMaskingRules')[copyIndex()].schemaName, parameters('dataMaskingRules')[copyIndex()].tableName, parameters('dataMaskingRules')[copyIndex()].columnName),'placeholder'))]",
            "condition": "[greater(length(parameters('dataMaskingRules')), 0)]",
            "type": "Microsoft.Sql/servers/databases/dataMaskingPolicies/rules",
            "apiVersion": "2014-04-01",
            "properties": "[parameters('dataMaskingRules')[copyIndex()]]",
            "copy": {
                "name": "dataMaskingRuleCopy",
                "count": "[if(greater(length(parameters('dataMaskingRules')), 0), length(parameters('dataMaskingRules')), 1)]"
            }
        }
    ],
    "outputs": {}
}