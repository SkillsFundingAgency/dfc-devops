{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerName": {
            "type": "string"
        },
        "appContainerRegistryImage": {
            "type": "string"
        },
        "containerRegistryPassword": {
            "type": "securestring"
        },
        "containerRegistryServer": {
            "type": "string"
        },
        "containerRegistryUsername": {
            "type": "string"
        },
        "cpu": {
            "type": "int"
        },
        "memoryInGb": {
            "type":"string"
        },
        "environmentVariables": {
            "type": "secureObject",
            "defaultValue": {
                "variables": []
            }
        },
        "publicallyExposedPorts": {
            "type": "array",
            "defaultValue": []
        },
        "restartPolicy": {
            "type": "string",
            "allowedValues": [
                "Always",
                "Never",
                "OnFailure"
            ],
            "defaultValue": "Never"
        }
    },
    "variables": {
        "baseProperties": {
            "containers": [
                {
                    "name": "[parameters('containerName')]",
                    "properties": "[variables('containerProperties')]"
                }
            ],
            "osType": "Windows",
            "imageRegistryCredentials": [
                {
                    "server": "[parameters('containerRegistryServer')]",
                    "username": "[parameters('containerRegistryUsername')]",
                    "password": "[parameters('containerRegistryPassword')]"
                }
            ],
            "restartPolicy": "[parameters('restartPolicy')]"
        },
        "containerBaseProperties": {
            "image": "[parameters('appContainerRegistryImage')]",
            "environmentVariables": "[parameters('environmentVariables').variables]",
            "resources": {
                "requests": {
                    "cpu": "[parameters('cpu')]",
                    "memoryInGb": "[parameters('memoryInGb')]"
                }
            }
        },
        "containerProperties": "[if(empty(parameters('publicallyExposedPorts')), variables('containerBaseProperties'), union(variables('containerBaseProperties'), variables('portsObject')))]",
        "ipAddressObject": {
            "ipAddress": {
                "type": "public",
                "copy": [
                    {
                        "name": "ports",
                        "count": "[length(variables('portsArray'))]",
                        "input": {
                            "protocol": "tcp",
                            "port": "[variables('portsArray')[copyIndex('ports')]]"
                        }
                    }
                ]
            }
        },
        "metadata": {
            "comments": "The portsArray variable ensures a object is always available for the copy loops.  The output of these loops is unioned with other properties only if publicallyExposedPorts is not an empty array."
        },
        "portsArray": "[if(empty(parameters('publicallyExposedPorts')), array(0), parameters('publicallyExposedPorts'))]",
        "portsObject": {
            "copy": [
                {
                    "name": "ports",
                    "count": "[length(variables('portsArray'))]",
                    "input": {
                        "protocol": "tcp",
                        "port": "[variables('portsArray')[copyIndex('ports')]]"
                    }
                }
            ]          
        },
        "properties": "[if(empty(parameters('publicallyExposedPorts')), variables('baseProperties'), union(variables('baseProperties'), variables('ipAddressObject')))]"
    },
    "resources": [
        {
            "name": "[parameters('containerName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "properties": "[variables('properties')]"
        }
    ],
    "outputs": {
        "publicIpAddress": {
            "type": "string",
            "condition": "[greater(length(parameters('publicallyExposedPorts')), 0)]",
            "value": "[reference(parameters('containerName')).ipAddress.ip]"
        }
    }
}