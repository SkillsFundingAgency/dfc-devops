{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "containerName": {
            "type": "string"
        },
        "appContainerRegistryImage": {
            "type": "string"
        },
        "containerRegistryPassword": {
            "type": "securestring",
            "defaultValue": ""
        },
        "containerRegistryServer": {
            "type": "string",
            "defaultValue": "hub.docker.com"
        },
        "containerRegistryUsername": {
            "type": "string",
            "defaultValue": "username"
        },
        "cpu": {
            "type": "int"
        },
        "memoryInGb": {
            "type": "string"
        },
        "ipAddressType": {
            "type": "string",
            "allowedValues": [
                "Private",
                "Public"
            ],
            "defaultValue": "Private"
        },
        "managedIdentity": {
            "type": "bool",
            "defaultValue": false
        },

        "environmentVariables": {
            "type": "secureObject",
            "defaultValue": {
                "variables": [
                ]
            },
            "metadata": {
                "description": "See documentation file linux-container-instance.md for information on how to correctly format this parameter."
            }
        },
        "mountedVolumeMountPath": {
            "type": "string",
            "defaultValue": ""
        },
        "restartPolicy": {
            "type": "string",
            "allowedValues": [
                "Always",
                "Never",
                "OnFailure"
            ],
            "defaultValue": "Never"
        },
        "storageAccountToMount": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccountFileShareName": {
            "type": "string",
            "defaultValue": ""
        },
        "storageAccountKey": {
            "type": "securestring",
            "defaultValue": ""
        },
        "tcpPorts": {
            "type": "array",
            "defaultValue": [
                0
            ]
        }
    },
    "variables": {
        "GroupVolumes": {
            "EmptyVolume": {
                "name": "novolume",
                "emptyDir": {
                }
            },
            "StorageAccountVolume": {
                "name": "[variables('StorageAccountMountedFileShareName')]",
                "azureFile": {
                    "readOnly": false,
                    "shareName": "[parameters('storageAccountFileShareName')]",
                    "storageAccountName": "[parameters('storageAccountToMount')]",
                    "storageAccountKey": "[parameters('storageAccountKey')]"
                }
            }
        },
        "IdentityProperties": "[if(parameters('managedIdentity'), variables('IdentityTypes').ManagedIdentity, variables('IdentityTypes').NoIdentity)]",
        "IdentityTypes": {
            "ManagedIdentity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                    "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('ManagedIdentityName'))]": {
                    }
                }
            },
            "NoIdentity": {
                "type": "None"
            }
        },
        "ImageRegistryCredentials": {
            "withPassword": [
                {
                    "server": "[parameters('containerRegistryServer')]",
                    "username": "[parameters('containerRegistryUsername')]",
                    "password": "[parameters('containerRegistryPassword')]"
                }
            ],
            "withoutPassword": [
                {
                    "server": "[parameters('containerRegistryServer')]",
                    "username": "[parameters('containerRegistryUsername')]",
                    "password": "not-a-real-password"
                }
            ]
        },
        "ManagedIdentityName": "[concat(parameters('containerName'), '-umi')]",
        "StorageAccountMountedFileShareName": "[concat('fileshare-', parameters('storageAccountFileShareName'))]",
        "VolumeMounts": {
            "NoMountedVolume": [],
            "MountedFileShare": [
                {
                    "name": "[variables('StorageAccountMountedFileShareName')]",
                    "mountPath": "[parameters('mountedVolumeMountPath')]",
                    "readOnly": false
                }
            ]
        },
        "copy": [
            {
                "name": "TcpPorts",
                "count": "[length(parameters('tcpPorts'))]",
                "input": {
                    "port": "[parameters('tcpPorts')[copyIndex('TcpPorts')]]",
                    "protocol": "TCP"
                }
            }
        ]
    },
    "resources": [
        {
            "name": "[parameters('containerName')]",
            "type": "Microsoft.ContainerInstance/containerGroups",
            "dependsOn": [
                "[variables('ManagedIdentityName')]"
            ],
            "apiVersion": "2018-10-01",
            "location": "[resourceGroup().location]",
            "identity": "[variables('IdentityProperties')]",
            "properties": {
                "containers": [
                    {
                        "name": "[parameters('containerName')]",
                        "properties": {
                            "image": "[parameters('appContainerRegistryImage')]",
                            "ports": "[if(equals(parameters('tcpPorts')[0], 0), createArray(''), variables('TcpPorts'))]",
                            "environmentVariables": "[parameters('environmentVariables').variables]",
                            "resources": {
                                "requests": {
                                    "cpu": "[parameters('cpu')]",
                                    "memoryInGb": "[parameters('memoryInGb')]"
                                }
                            },
                            "volumeMounts": "[if(equals(parameters('mountedVolumeMountPath'), ''), variables('VolumeMounts').NoMountedVolume, variables('VolumeMounts').MountedFileShare)]"
                        }
                    }
                ],
                "imageRegistryCredentials": "[if(equals(parameters('containerRegistryPassword'), ''), variables('ImageRegistryCredentials').withoutPassword, variables('ImageRegistryCredentials').withPassword)]",
                "ipAddress": {
                    "type": "[parameters('ipAddressType')]",
                    "dnsNameLabel": "[parameters('containerName')]",
                    "ports": "[if(equals(parameters('tcpPorts')[0], 0), createArray(''), variables('TcpPorts'))]"
                },
                "osType": "Linux",
                "restartPolicy": "[parameters('restartPolicy')]",
                "volumes": [
                    "[if(equals(parameters('storageAccountFileShareName'), ''), variables('GroupVolumes').EmptyVolume, variables('GroupVolumes').StorageAccountVolume)]"
                ]
            }
        },
        {
            "name": "[variables('ManagedIdentityName')]",
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "condition": "[parameters('managedIdentity')]",
            "apiVersion": "2018-11-30",
            "location": "[resourceGroup().location]",
            "properties": {
            }
        }
    ],
    "outputs": {
        "ManagedIdentityObjectId": {
            "type": "string",
            "condition": "[parameters('managedIdentity')]",
            "value": "[reference(concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('ManagedIdentityName')), '2018-11-30').principalId]"
        }
    }
}