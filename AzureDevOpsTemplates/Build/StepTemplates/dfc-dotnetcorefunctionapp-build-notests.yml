parameters:
  SolutionBaseName: ''
  BuildPlatform: 'any cpu'
  BuildConfiguration: 'release'
  GitVersionVersion: '5.3.x'
  IncludePreviewVersions: false
  DotNetCoreVersion: ''
  NugetVersion: '5.x'

steps:
 - task: UseDotNet@2
   displayName: 'Use .NET Core sdk ${{ parameters.DotNetCoreVersion }}'
   condition: ne('', '${{ parameters.DotNetCoreVersion }}')
   inputs:
     version: ${{ parameters.DotNetCoreVersion }}
     IncludePreviewVersions: ${{ parameters.IncludePreviewVersions }}
     installationPath: $(Agent.ToolsDirectory)/dotnet

 - task: gittools.gitversion.gitversion-task.GitVersion@5
   displayName: GitVersion
   inputs:
     useConfigFile: true
     configFilePath: GitVersion.yml
     versionSpec: ${{ parameters.GitVersionVersion }}

 - task: DotNetCoreCLI@2
   displayName: 'restore nuget packages'
   inputs:
     command: 'restore'
     projects: '**\*.csproj'
     feedsToUse: 'select'
     vstsFeed: 'NationalCareersService'
     
 - task: DotNetCoreCLI@2
   displayName: 'dotnet build'
   inputs:
     command: 'build'
     arguments: '-o "$(build.artifactstagingdirectory)\Build\\"'

 - task: ArchiveFiles@2
   displayName: ArchiveFunctionApp
   inputs: 
     rootFolderOrFile: $(build.artifactstagingdirectory)\Build\
     archiveFile: $(build.artifactstagingdirectory)\DeploymentPackages\$(SolutionBaseName).zip
     includeRootFolder: false

 - task: CopyFiles@2
   displayName: 'Copy Files to: $(build.artifactstagingdirectory)/Azure'
   inputs:
     sourceFolder: 'Resources'
     contents: '**'
     targetFolder: '$(build.artifactstagingdirectory)/Azure'

 - task: PublishBuildArtifacts@1
   displayName: 'Publish Artifact: ${{ parameters.SolutionBaseName }}'
   inputs:
     pathtoPublish: $(build.artifactstagingdirectory)
     artifactName: ${{ parameters.SolutionBaseName }}
     publishLocation: container